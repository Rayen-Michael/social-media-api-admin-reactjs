{"version":3,"file":"static/js/417.1d828d8b.chunk.js","mappings":"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","sources":["components/BarChart.jsx","components/StatBox.jsx","components/ProgressCircle.jsx","pages/dashboard/Index.jsx"],"sourcesContent":["import { useTheme } from \"@mui/material\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { tokens } from \"../theme\";\n\nconst BarChart = ({ data }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <ResponsiveBar\n      data={data}\n      theme={{\n        // added\n        axis: {\n          domain: {\n            line: {\n              stroke: colors.grey[100],\n            },\n          },\n          legend: {\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n          ticks: {\n            line: {\n              stroke: colors.grey[100],\n              strokeWidth: 1,\n            },\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n        },\n        legends: {\n          text: {\n            fill: colors.grey[100],\n          },\n        },\n      }}\n      keys={[\"users\", \"posts\", \"comments\"]}\n      indexBy=\"month\"\n      margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n      padding={0.3}\n      valueScale={{ type: \"linear\" }}\n      indexScale={{ type: \"band\", round: true }}\n      colors={{ scheme: \"accent\" }}\n      borderColor={{\n        from: 'color',\n        modifiers: [\n          ['darker', .6],\n          ['opacity', .5]\n        ]\n      }}\n      colorBy=\"id\"\n      defs={[\n        {\n          id: \"dots\",\n          type: \"patternDots\",\n          background: \"inherit\",\n          color: \"#38bcb2\",\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: \"lines\",\n          type: \"patternLines\",\n          background: \"inherit\",\n          color: \"#eed312\",\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      // fill={[\n      //   {\n      //     match: {\n      //       id: 'users'\n      //     },\n      //     id: 'dots'\n      //   },\n      //   {\n      //     match: {\n      //       id: 'comments'\n      //     },\n      //     id: 'lines'\n      //   }\n      // ]}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0, // changed\n        legendPosition: \"middle\",\n        legendOffset: 32,\n      }}\n      axisLeft={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0, // changed\n        legendPosition: \"middle\",\n        legendOffset: -40,\n      }}\n      enableLabel={true}\n      label=\"formattedValue\"\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor={{\n        \"from\": \"theme\",\n        \"theme\": \"labels.text.fill\"\n      }}\n      legends={[\n        {\n          dataFrom: \"keys\",\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 120,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemWidth: 100,\n          itemHeight: 20,\n          itemDirection: \"left-to-right\",\n          itemOpacity: 0.85,\n          symbolSize: 20,\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n      role=\"application\"\n      tooltip={e => {\n        return (\n          <div\n            style={{\n              background: \"#f0f0f0\",\n              color: \"#333\",\n              padding: \"4px 8px\",\n              borderRadius: \"4px\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              fontSize: \"13px\",\n            }}\n          >\n            <div style={{\n              backgroundColor: e.color,\n              width: \"10px\",\n              height: \"10px\",\n            }} />\n            <div style={{ marginLeft: \"8px\" }}>{`${e.id} - `}</div>\n            <div style={{ fontWeight: \"bold\", marginLeft: \"4px\" }}>{e.value}</div>\n          </div>\n        );\n      }}\n      barAriaLabel={function (e) {\n        return e.id + \" \" + e.value;\n      }}\n    />\n  );\n};\n\nexport default BarChart;\n","import { Box, Typography, useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\n\nconst StatBox = ({ title, subtitle, icon }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <Box\n      gridColumn=\"span 3\"\n      backgroundColor={colors.primary[400]}\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box width=\"100%\" m=\"0 30px\">\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            {icon}\n            <Typography\n              variant=\"h4\"\n              fontWeight=\"bold\"\n              sx={{ color: colors.grey[100] }}\n              mt=\"8px\"\n            >\n              {title}\n            </Typography>\n          </Box>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt=\"8px\">\n          <Typography variant=\"h5\" sx={{ color: colors.greenAccent[500] }}>\n            {subtitle}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default StatBox;\n","import { Box, useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\n\nconst ProgressCircle = ({ progress = \"0\", size = \"40\" }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const angle = progress * 360;\n\n  return (\n    <Box\n      sx={{\n        background: `radial-gradient(${colors.primary[400]} 55%, transparent 56%),\n            conic-gradient(transparent 0deg ${angle}deg, ${colors.blueAccent[500]} ${angle}deg 360deg),\n            ${colors.greenAccent[500]}`,\n        borderRadius: \"50%\",\n        width: `${size}px`,\n        height: `${size}px`,\n      }}\n    />\n  );\n};\n\nexport default ProgressCircle;\n","import { useState, useEffect } from 'react';\nimport { Box, Button, Typography, useTheme } from \"@mui/material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { tokens } from \"../../theme\";\nimport DownloadOutlinedIcon from \"@mui/icons-material/DownloadOutlined\";\nimport EmailIcon from \"@mui/icons-material/Email\";\nimport ListIcon from \"@mui/icons-material/List\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport Header from \"../../components/Header\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport BarChart from \"../../components/BarChart\";\nimport StatBox from \"../../components/StatBox\";\nimport ProgressCircle from \"../../components/ProgressCircle\";\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  getStatsAction,\n  getRecentPostsAction,\n  getRecentUsersAction,\n  getVerifiedUsersStatsAction,\n  getMonthlyStatsAction,\n} from '../../redux/actions';\nimport { toDateString } from '../../utils/dateUtils';\nimport CircleAvatar from '../../components/global/CircleAvatar';\nimport PageHOC from '../../helpers/PageHOC';\n\nconst DashboardPage = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  const auth = useSelector((state) => state.auth);\n  const profileDetails = useSelector((state) => state.profileDetails);\n  const stats = useSelector((state) => state.stats);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [open, setOpen] = useState(false);\n\n  const closeBackdrop = () => {\n    setOpen(false);\n  };\n\n  const openBackdrop = () => {\n    setOpen(true);\n  };\n\n  const getData = async () => {\n    if (stats.status === 'idle') {\n      const statsPromise = getStatsAction(dispatch, auth.token);\n      const recentUsersPromise = getRecentUsersAction(dispatch, auth.token);\n      const recentPostsPromise = getRecentPostsAction(dispatch, auth.token);\n      const verifiedUsersPromise = getVerifiedUsersStatsAction(dispatch, auth.token);\n      const monthlyStatsPromise = getMonthlyStatsAction(dispatch, auth.token);\n      openBackdrop();\n      await Promise.all([\n        statsPromise, recentUsersPromise, recentPostsPromise,\n        verifiedUsersPromise, monthlyStatsPromise\n      ]);\n      closeBackdrop();\n    }\n  }\n\n  const renderIcon = (key) => {\n    switch (key) {\n      case 'users':\n        return <PersonAddIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n      case 'posts':\n        return <ListIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n      case 'comments':\n        return <CommentIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n      case 'messages':\n        return <EmailIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n      default:\n        return <ListIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n    }\n  }\n\n  useEffect(() => {\n    document.title = \"Home | Dashboard\";\n\n    if (profileDetails.status === 'loading' || stats.status === 'loading') {\n      openBackdrop();\n    }\n    else {\n      closeBackdrop();\n    }\n\n    return () => { }\n\n  }, [\n    profileDetails.status, stats.status\n  ]);\n\n  useEffect(() => {\n    getData();\n\n    return () => { }\n\n  }, [auth.token]);\n\n  return (\n    <>\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      <Box m=\"20px\" mt=\"0\" width=\"100%\">\n        {/* HEADER */}\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Header title=\"DASHBOARD\" subtitle=\"Welcome to admin dashboard\" />\n\n          <Box>\n            <Button\n              sx={{\n                backgroundColor: colors.blueAccent[700],\n                color: colors.grey[100],\n                fontSize: \"14px\",\n                fontWeight: \"bold\",\n                padding: \"10px 20px\",\n              }}\n            >\n              <DownloadOutlinedIcon sx={{ mr: \"10px\" }} />\n              Download Reports\n            </Button>\n          </Box>\n        </Box>\n\n        {/* GRID & CHARTS */}\n\n        <Box\n          display=\"grid\"\n          gridTemplateColumns=\"repeat(12, 1fr)\"\n          gridAutoRows=\"140px\"\n          gap=\"20px\"\n          pb=\"20px\"\n        >\n          {/* Row 1 Start */}\n\n          {\n            (stats.status === 'success' && stats.stats) ?\n              Object.keys(stats.stats).map((key) => {\n                const stat = stats.stats[key];\n                return (\n                  <StatBox\n                    key={key}\n                    title={stat.total}\n                    subtitle={key.toLocaleUpperCase()}\n                    icon={renderIcon(key)}\n                  // progress={stat.progress ? stat.progress / 100 : 0}\n                  // increase={\n                  //   stat.progress !== null && stat.progress >= 0 ?\n                  //     `+${stat.progress}%` :\n                  //     `${stat.progress}%`\n                  // }\n                  />\n                );\n              })\n              :\n              null\n          }\n\n          {/* Row 1 End */}\n\n          {/* Row 2 Start */}\n\n          <Box\n            gridColumn={{ xs: \"span 12\", lg: \"span 6\" }}\n            gridRow=\"span 3\"\n            backgroundColor={colors.primary[400]}\n            overflow=\"auto\"\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              borderBottom={`4px solid ${colors.background}`}\n              colors={colors.grey[100]}\n              p=\"15px\"\n            >\n              <Typography color={colors.grey[100]}\n                variant=\"h3\"\n                fontWeight=\"600\"\n              >\n                Recent Users\n              </Typography>\n            </Box>\n            {\n              (stats.status === 'success' && stats.recentUsers) ?\n                stats.recentUsers.map((user, i) => (\n                  <Box\n                    key={`${user._id}-${i}`}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    borderBottom={`4px solid ${colors.background}`}\n                    p=\"15px\"\n                  >\n                    <Box display='flex' flexDirection='row' justifyContent='center'>\n                      <CircleAvatar avatar={user.avatar} />\n                      <Box ml='20px'>\n                        <Typography\n                          color={colors.greenAccent[500]}\n                          variant=\"h5\"\n                          fontWeight=\"600\"\n                        >\n                          {user._id}\n                        </Typography>\n                        <Typography color={colors.grey[100]}>\n                          {user.uname}\n                        </Typography>\n                      </Box>\n                    </Box>\n\n                    <Box color={colors.grey[100]}>\n                      {user.createdAt && toDateString(user.createdAt)}\n                    </Box>\n\n                    <div\n                      style={{\n                        backgroundColor: colors.greenAccent[500],\n                        padding: '5px 10px',\n                        borderRadius: '4px',\n                        display: 'flex',\n                        flexDirection: 'row',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        cursor: 'pointer'\n                      }}\n                      onClick={() => navigate(`/users/${user._id}`)}\n                    >\n                      <VisibilityIcon />\n                    </div>\n                  </Box>\n                ))\n                :\n                null\n            }\n          </Box>\n\n          {/* <Box\n            gridColumn=\"span 8\"\n            gridRow=\"span 2\"\n            sx={{ gridColumn: \"span 12\", gridRow: \"span 2\" }}\n            backgroundColor={colors.primary[400]}\n          >\n            <Box\n              mt=\"25px\"\n              p=\"0 30px\"\n              display=\"flex \"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Box>\n                <Typography\n                  variant=\"h5\"\n                  fontWeight=\"600\"\n                  color={colors.grey[100]}\n                >\n                  Recent Users\n                </Typography>\n                <Typography\n                  variant=\"h3\"\n                  fontWeight=\"bold\"\n                  color={colors.greenAccent[500]}\n                >\n                  $59,342.32\n                </Typography>\n              </Box>\n              <Box>\n                <IconButton>\n                  <DownloadOutlinedIcon\n                    sx={{ fontSize: \"26px\", color: colors.greenAccent[500] }}\n                  />\n                </IconButton>\n              </Box>\n            </Box>\n            <Box height=\"250px\" m=\"-20px 0 0 0\">\n              <LineChart isDashboard={true} />\n            </Box>\n          </Box> */}\n\n          <Box\n            gridColumn={{ xs: \"span 12\", lg: \"span 6\" }}\n            gridRow=\"span 3\"\n            backgroundColor={colors.primary[400]}\n            overflow=\"auto\"\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              borderBottom={`4px solid ${colors.background}`}\n              colors={colors.grey[100]}\n              p=\"15px\"\n            >\n              <Typography color={colors.grey[100]}\n                variant=\"h3\"\n                fontWeight=\"600\">\n                Recent Posts\n              </Typography>\n            </Box>\n            {\n              (stats.status === 'success' && stats.recentPosts) ?\n                stats.recentPosts.map((post, i) => (\n                  <Box\n                    key={`${post._id}-${i}`}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    borderBottom={`4px solid ${colors.background}`}\n                    p=\"15px\"\n                  >\n                    <Box>\n                      <Typography\n                        color={colors.greenAccent[500]}\n                        variant=\"h5\"\n                        fontWeight=\"600\"\n                      >\n                        {post._id}\n                      </Typography>\n                      <Typography color={colors.grey[100]}>\n                        {post.owner.uname}\n                      </Typography>\n                    </Box>\n\n                    <Box>\n                      <Typography color={colors.grey[100]}>\n                        {post.mediaFiles.length} Media\n                      </Typography>\n                    </Box>\n\n                    <Box color={colors.grey[100]}>\n                      {post.createdAt && toDateString(post.createdAt)}\n                    </Box>\n\n                    <div\n                      style={{\n                        backgroundColor: colors.greenAccent[500],\n                        padding: '5px 10px',\n                        borderRadius: '4px',\n                        display: 'flex',\n                        flexDirection: 'row',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        cursor: 'pointer'\n                      }}\n                      onClick={() => navigate(`/posts/${post._id}`)}\n                    >\n                      <VisibilityIcon />\n                    </div>\n                  </Box>\n                ))\n                :\n                null\n            }\n          </Box>\n\n          {/* Row 2 End */}\n\n          {/* Row 3 Start */}\n\n          <Box\n            gridColumn={{ xs: \"span 12\", lg: \"span 4\" }}\n            gridRow=\"span 2\"\n            backgroundColor={colors.primary[400]}\n          >\n\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              borderBottom={`4px solid ${colors.background}`}\n              colors={colors.grey[100]}\n              p=\"15px\"\n            >\n              <Typography variant=\"h3\" fontWeight=\"600\">\n                Blue Tick Verified Users\n              </Typography>\n            </Box>\n\n            {\n              (stats.status === 'success' && stats.verifiedUsersStats) ?\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  alignItems=\"center\"\n                  mt=\"25px\"\n                >\n                  <ProgressCircle\n                    size=\"144\"\n                    progress={stats.verifiedUsersStats.roundedUnit}\n                  />\n                  <Typography\n                    variant=\"h5\"\n                    color={colors.greenAccent[500]}\n                    sx={{ mt: \"15px\" }}\n                  >\n                    {stats.verifiedUsersStats.roundedPercentage}% verified users\n                  </Typography>\n                  <Typography>\n                    {`${stats.verifiedUsersStats.verifiedUsers} out of\n                  ${stats.verifiedUsersStats.totalUsers} users are blue tick verified`}\n                  </Typography>\n                </Box>\n                :\n                null\n            }\n          </Box>\n\n          <Box\n            gridColumn={{ xs: \"span 12\", lg: \"span 8\" }}\n            gridRow=\"span 2\"\n            backgroundColor={colors.primary[400]}\n          >\n\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              borderBottom={`4px solid ${colors.background}`}\n              colors={colors.grey[100]}\n              p=\"15px\"\n            >\n              <Typography\n                variant=\"h3\"\n                fontWeight=\"600\"\n              >\n                Monthly Stats\n              </Typography>\n            </Box>\n\n            {\n              (stats.status === 'success' && stats.monthlyStats) ?\n                <Box height=\"250px\" mt=\"-20px\">\n                  <BarChart data={stats.monthlyStats} />\n                </Box>\n                :\n                null\n            }\n          </Box>\n\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default PageHOC(DashboardPage);\n"],"names":["data","theme","useTheme","colors","tokens","palette","mode","axis","domain","line","stroke","grey","legend","text","fill","ticks","strokeWidth","legends","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","scheme","borderColor","from","modifiers","colorBy","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","axisLeft","enableLabel","label","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","animate","motionStiffness","motionDamping","role","tooltip","e","borderRadius","display","flexDirection","alignItems","justifyContent","fontSize","backgroundColor","width","height","marginLeft","fontWeight","value","barAriaLabel","title","subtitle","icon","Box","gridColumn","primary","m","Typography","variant","sx","mt","greenAccent","progress","angle","blueAccent","PageHOC","auth","useSelector","state","profileDetails","stats","dispatch","useDispatch","navigate","useNavigate","useState","open","setOpen","closeBackdrop","openBackdrop","getData","status","statsPromise","getStatsAction","token","recentUsersPromise","getRecentUsersAction","recentPostsPromise","getRecentPostsAction","verifiedUsersPromise","getVerifiedUsersStatsAction","monthlyStatsPromise","getMonthlyStatsAction","Promise","all","renderIcon","key","PersonAdd","List","Comment","Email","useEffect","document","Backdrop","zIndex","drawer","CircularProgress","Header","Button","DownloadOutlined","mr","gridTemplateColumns","gridAutoRows","gap","pb","Object","map","stat","total","toLocaleUpperCase","xs","lg","gridRow","overflow","borderBottom","p","recentUsers","user","i","CircleAvatar","avatar","ml","_id","uname","createdAt","toDateString","cursor","onClick","Visibility","recentPosts","post","owner","mediaFiles","length","verifiedUsersStats","roundedUnit","roundedPercentage","verifiedUsers","totalUsers","monthlyStats"],"sourceRoot":""}