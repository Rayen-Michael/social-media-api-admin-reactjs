{"version":3,"file":"static/js/417.de6ac2b9.chunk.js","mappings":"kMAuBA,IApBe,SAAH,GAA6B,IAAvBA,EAAK,EAALA,MAAOC,EAAQ,EAARA,SACjBC,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MACpC,OACE,UAAC,IAAG,CAACC,GAAG,OAAM,WACZ,SAAC,IAAU,CACTC,QAAQ,KACRC,MAAON,EAAOO,KAAK,KACnBC,WAAW,OACXC,GAAI,CAAEC,EAAG,aAAc,SAEtBd,KAEH,SAAC,IAAU,CAACS,QAAQ,KAAKC,MAAON,EAAOW,YAAY,KAAK,SACrDd,MAIT,C,6CCgBA,IAnCe,SAAH,GAAkD,IAA5Ce,EAAM,EAANA,OAAO,EAAD,EAAEC,KAAAA,OAAI,MAAG,OAAM,MAAEC,IAC/BC,EAAQ,CACVC,MAAOH,EACPI,OAAQJ,EACRK,aAAc,MACdC,eALoC,MAAG,QAAO,GAQlD,OAAIP,GAAUA,EAAOQ,KAEb,gBAAKL,MAAOA,EAAM,UACd,gBACIM,IAAKT,EAAOQ,IACZL,MAAOA,EACPO,IAAI,SACJN,MAAOH,EACPI,OAAQJ,OAOpB,gBAAKE,MAAOA,EAAM,UACd,gBACIM,IAAI,mBACJN,MAAOA,EACPO,IAAI,SACJN,MAAOH,EACPI,OAAQJ,KAIxB,C,uNC8DA,EApFe,WACb,IAAMf,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MAC9BoB,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,UAACC,EAAA,EAAG,CACFC,SAAS,QACTC,IAAI,IACJC,KAAK,IACLC,MAAM,IACNf,OAAQ,CAAEgB,GAAI,OAAQC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QAClDC,QAASrC,EAAOsC,QAAQ,KACxBC,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfC,WAAW,SACXC,EAAG,EACHC,OAAO,OAAM,WAIb,SAAChB,EAAA,EAAG,CACFW,QAAQ,OACRG,WAAW,SACXD,eAAe,SAAQ,UAEvB,gBACEnB,IAAI,OACJN,MAAM,OACNC,OAAO,OACPI,IAAG,sBAKP,UAACO,EAAA,EAAG,CACFW,QAAQ,OACRM,gBAAiB7C,EAAOsC,QAAQ,KAChCpB,aAAa,MACbD,OAAQ,CAAEgB,GAAI,OAAQC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QAAS,WAE3D,SAACU,EAAA,GAAS,CAACrC,GAAI,CAAEsC,GAAI,EAAGC,KAAM,GAAKC,YAAY,YAC/C,SAACC,EAAA,EAAU,CAACC,KAAK,SAAS1C,GAAI,CAAEkC,EAAG,GAAI,UACrC,SAACS,EAAA,EAAU,UAKf,UAACxB,EAAA,EAAG,CAACW,QAAQ,OAAM,WACjB,SAACW,EAAA,EAAU,CAACG,QAAS9B,EAAU+B,gBAAgB,SACrB,SAAvBxD,EAAMI,QAAQC,MACb,SAACoD,EAAA,EAAoB,KAErB,SAACC,EAAA,EAAqB,OAG1B,SAACN,EAAA,EAAU,WACT,SAACO,EAAA,EAAyB,OAE5B,SAACP,EAAA,EAAU,WACT,SAACQ,EAAA,EAAoB,OAEvB,SAACR,EAAA,EAAU,CAACG,QA9DC,WACjB3B,GAASiC,EAAAA,EAAAA,MACX,EA4DsC,UAC9B,SAACC,EAAA,EAAkB,WAK7B,E,uKC1EMC,EAAO,SAAH,GAAoD,IAA9CjE,EAAK,EAALA,MAAOkE,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YACnCnE,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MAC9B+D,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAQ,CACPC,OAAQJ,IAAapE,EACrBmB,MAAO,CACLT,MAAON,EAAOO,KAAK,MAErB8C,QAAS,WACPY,EAAYrE,GACZsE,EAASJ,EACX,EACAC,KAAMA,EAAK,UAEX,SAACM,EAAA,EAAU,UAAEzE,KAGnB,EAqOA,EAnOgB,WAAO,IAAD,QACdE,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MACpC,GAAsCmE,EAAAA,EAAAA,WAAS,GAAK,eAA7CC,EAAW,KAAEC,EAAc,KAClC,GAAgCF,EAAAA,EAAAA,UAAS,aAAY,eAA9CN,EAAQ,KAAEC,EAAW,KACtBQ,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IA2B9C,OAzBAG,EAAAA,EAAAA,YAAU,WAmBR,OAlBAC,OAAOC,iBAAiB,QAAQ,WAC1BD,OAAOE,YAAc,IACvBP,GAAe,GAGfA,GAAe,EAEnB,IAEAK,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,YAAc,IACvBP,GAAe,GAGfA,GAAe,EAEnB,IAEO,WACLK,OAAOG,oBAAoB,QAAQ,WAAQ,IAC3CH,OAAOG,oBAAoB,UAAU,WAAQ,GAC/C,CACF,GAAG,KAGD,SAACpD,EAAA,EAAG,CACFnB,GAAI,CACF,mBAAoB,CAClBwE,WAAW,GAAD,OAAKjF,EAAOsC,QAAQ,KAAI,gBAEpC,iBAAkB,CAChB2C,WAAW,yBACX3E,MAAM,sBAER,qBAAsB,CACpBA,MAAO,sBAET,sBAAuB,CACrBA,MAAO,uBAET,UAEF,SAAC,KAAU,CAAC4E,UAAWX,EAAY,UACjC,UAAC,KAAI,WAEAA,EA2BG,MA1BF,UAAC3C,EAAA,EAAG,CAAClB,EAAE,SACL6B,QAAQ,OACRC,cAAc,SACdC,eAAe,SACfC,WAAW,SAAQ,WAEnB,SAACyC,EAAA,EAAM,CACLvE,OAAiB,QAAX,EAAE6D,EAAKW,YAAI,aAAT,EAAWxE,OACnBC,KAAK,WAGP,UAACe,EAAA,EAAG,CAACyD,UAAU,SAAQ,WACrB,SAAChB,EAAA,EAAU,CACThE,QAAQ,KACRC,MAAON,EAAOO,KAAK,KACnBC,WAAW,OACXC,GAAI,CAAEC,EAAG,cAAe,UAEd,QAAT,EAAA+D,EAAKW,YAAI,aAAT,EAAWE,OAAQ,KAAe,QAAZ,EAAGb,EAAKW,YAAI,aAAT,EAAWG,UAGvC,SAAClB,EAAA,EAAU,CAAChE,QAAQ,KAAKC,MAAON,EAAOW,YAAY,KAAK,SACrD,KAAe,QAAZ,EAAG8D,EAAKW,YAAI,aAAT,EAAWI,gBAO5B,UAAC5D,EAAA,EAAG,CAAC6D,YAAalB,OAAcmB,EAAY,KAAK,WAC/C,SAAC7B,EAAI,CACHjE,MAAM,YACNkE,GAAG,IACHC,MAAM,SAAC4B,EAAA,EAAgB,IACvB3B,SAAUA,EACVC,YAAaA,KAGf,SAACI,EAAA,EAAU,CACThE,QAAQ,KACRC,MAAON,EAAOO,KAAK,KACnBE,GAAI,CAAEC,EAAG,mBAAoB,mBAI/B,SAACmD,EAAI,CACHjE,MAAM,eACNkE,GAAG,SACHC,MAAM,SAAC6B,EAAA,EAAkB,IACzB5B,SAAUA,EACVC,YAAaA,KAEf,SAACJ,EAAI,CACHjE,MAAM,eACNkE,GAAG,SACHC,MAAM,SAAC8B,EAAA,EAAmB,IAC1B7B,SAAUA,EACVC,YAAaA,KAEf,SAACJ,EAAI,CACHjE,MAAM,kBACNkE,GAAG,YACHC,MAAM,SAAC+B,EAAA,EAAW,IAClB9B,SAAUA,EACVC,YAAaA,KAGf,SAACI,EAAA,EAAU,CACThE,QAAQ,KACRC,MAAON,EAAOO,KAAK,KACnBE,GAAI,CAAEC,EAAG,mBAAoB,oBAI/B,SAACmD,EAAI,CACHjE,MAAM,eACNkE,GAAG,QACHC,MAAM,SAACH,EAAA,EAAkB,IACzBI,SAAUA,EACVC,YAAaA,KAEf,SAACJ,EAAI,CACHjE,MAAM,WACNkE,GAAG,YACHC,MAAM,SAACgC,EAAA,EAAyB,IAChC/B,SAAUA,EACVC,YAAaA,KAEf,SAACJ,EAAI,CACHjE,MAAM,WACNkE,GAAG,OACHC,MAAM,SAACiC,EAAA,EAAuB,IAC9BhC,SAAUA,EACVC,YAAaA,KAGf,SAACI,EAAA,EAAU,CACThE,QAAQ,KACRC,MAAON,EAAOO,KAAK,KACnBE,GAAI,CAAEC,EAAG,mBAAoB,qBAI/B,SAACmD,EAAI,CACHjE,MAAM,YACNkE,GAAG,OACHC,MAAM,SAACkC,EAAA,EAAoB,IAC3BjC,SAAUA,EACVC,YAAaA,KAEf,SAACJ,EAAI,CACHjE,MAAM,YACNkE,GAAG,OACHC,MAAM,SAACmC,EAAA,EAA2B,IAClClC,SAAUA,EACVC,YAAaA,KAEf,SAACJ,EAAI,CACHjE,MAAM,aACNkE,GAAG,QACHC,MAAM,SAACoC,EAAA,EAAoB,IAC3BnC,SAAUA,EACVC,YAAaA,KAEf,SAACJ,EAAI,CACHjE,MAAM,kBACNkE,GAAG,aACHC,MAAM,SAACqC,EAAA,EAAe,IACtBpC,SAAUA,EACVC,YAAaA,OAIfM,GAiBA,gBAAKxD,MAAO,CACVwB,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZ2D,OAAQ,SACR/F,MAAON,EAAOO,KAAK,MACnB,UACA,SAAC2C,EAAA,EAAU,CAACG,QAAS,kBAAMmB,GAAgBD,EAAY,EAAC,UACtD,SAAC+B,EAAA,EAAmB,CAClB7F,GAAI,CACF8F,SAAU,OACV/F,WAAY,eA3BpB,gBAAKO,MAAO,CACVsF,OAAQ,mBACR/F,MAAON,EAAOO,KAAK,KACnBgC,QAAS,OACTE,eAAgB,MAChBC,WAAY,UACZ,UACA,SAACQ,EAAA,EAAU,CAACG,QAAS,kBAAMmB,GAAgBD,EAAY,EAAC,UACtD,SAACiC,EAAA,EAAmB,CAClB/F,GAAI,CACF8F,SAAU,OACV/F,WAAY,oBA0BhC,ECpPA,EApBgB,SAACiG,GACb,OAAO,SAACC,GACJ,OACI,iCACI,SAAC,EAAM,KACP,UAAC9E,EAAA,EAAG,CACAW,QAAQ,OACRC,cAAc,MACdxB,MAAM,OACN2F,SAAS,OACTC,GAAI,CAAE3E,GAAI,OAAQC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QAAS,WAEvD,SAAC,EAAO,KACR,SAACqE,GAAgB,UAAKC,SAItC,CACJ,C,mQCuJA,EAzKiB,SAAH,GAAkB,IAAZG,EAAI,EAAJA,KACZ/G,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MAEpC,OACE,SAAC,KAAa,CACZ0G,KAAMA,EACN/G,MAAO,CAELgH,KAAM,CACJC,OAAQ,CACNC,KAAM,CACJC,OAAQjH,EAAOO,KAAK,OAGxB2G,OAAQ,CACNC,KAAM,CACJC,KAAMpH,EAAOO,KAAK,OAGtB8G,MAAO,CACLL,KAAM,CACJC,OAAQjH,EAAOO,KAAK,KACpB+G,YAAa,GAEfH,KAAM,CACJC,KAAMpH,EAAOO,KAAK,QAIxBgH,QAAS,CACPJ,KAAM,CACJC,KAAMpH,EAAOO,KAAK,QAIxBiH,KAAM,CAAC,QAAS,QAAS,YACzBC,QAAQ,QACRpB,OAAQ,CAAEvE,IAAK,GAAIE,MAAO,IAAK0F,OAAQ,GAAI3F,KAAM,IACjD4F,QAAS,GACTC,WAAY,CAAEzE,KAAM,UACpB0E,WAAY,CAAE1E,KAAM,OAAQ2E,OAAO,GACnC9H,OAAQ,CAAE+H,OAAQ,UAClBC,YAAa,CACXC,KAAM,QACNC,UAAW,CACT,CAAC,SAAU,IACX,CAAC,UAAW,MAGhBC,QAAQ,KACRC,KAAM,CACJ,CACEC,GAAI,OACJlF,KAAM,cACN8B,WAAY,UACZ3E,MAAO,UACPO,KAAM,EACN8G,QAAS,EACTW,SAAS,GAEX,CACED,GAAI,QACJlF,KAAM,eACN8B,WAAY,UACZ3E,MAAO,UACPiI,UAAW,GACXC,UAAW,EACXC,QAAS,KAiBbC,QAAS,KACTC,UAAW,KACXC,WAAY,CACVC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,eAAgB,SAChBC,aAAc,IAEhBC,SAAU,CACRL,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,eAAgB,SAChBC,cAAe,IAEjBE,aAAa,EACbC,MAAM,iBACNC,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,CACd,KAAQ,QACR,MAAS,oBAEXhC,QAAS,CACP,CACEiC,SAAU,OACVC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,gBACfC,YAAa,IACbC,WAAY,GACZC,QAAS,CACP,CACEC,GAAI,QACJtJ,MAAO,CACLmJ,YAAa,OAMvBI,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GACfC,KAAK,cACLC,QAAS,SAAAC,GACP,OACE,iBACE5J,MAAO,CACLkE,WAAY,UACZ3E,MAAO,OACPqH,QAAS,UACTzG,aAAc,MACdqB,QAAS,OACTC,cAAe,MACfE,WAAY,SACZD,eAAgB,SAChB8D,SAAU,QACV,WAEF,gBAAKxF,MAAO,CACV8B,gBAAiB8H,EAAErK,MACnBU,MAAO,OACPC,OAAQ,WAEV,gBAAKF,MAAO,CAAE6J,WAAY,OAAQ,mBAAKD,EAAEtC,GAAE,UAC3C,gBAAKtH,MAAO,CAAEP,WAAY,OAAQoK,WAAY,OAAQ,SAAED,EAAEE,UAGhE,EACAC,aAAc,SAAUH,GACtB,OAAOA,EAAEtC,GAAK,IAAMsC,EAAEE,KACxB,GAGN,EC/HA,EAzCgB,SAAH,GAAmC,IAA7BjL,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUkE,EAAI,EAAJA,KAC5BjE,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MAEpC,OACE,SAACyB,EAAA,EAAG,CACFmJ,WAAW,SACXlI,gBAAiB7C,EAAOsC,QAAQ,KAChCC,QAAQ,OACRG,WAAW,SACXD,eAAe,SAAQ,UAEvB,UAACb,EAAA,EAAG,CAACZ,MAAM,OAAON,EAAE,SAAQ,WAC1B,SAACkB,EAAA,EAAG,CAACW,QAAQ,OAAOE,eAAe,SAASC,WAAW,SAAQ,UAC7D,UAACd,EAAA,EAAG,CACFW,QAAQ,OACRC,cAAc,SACdE,WAAW,SACXD,eAAe,SAAQ,UAEtBsB,GACD,SAACM,EAAA,EAAU,CACThE,QAAQ,KACRG,WAAW,OACXC,GAAI,CAAEH,MAAON,EAAOO,KAAK,MACzBqG,GAAG,MAAK,SAEPhH,UAIP,SAACgC,EAAA,EAAG,CAACW,QAAQ,OAAOE,eAAe,SAASC,WAAW,SAASkE,GAAG,MAAK,UACtE,SAACvC,EAAA,EAAU,CAAChE,QAAQ,KAAKI,GAAI,CAAEH,MAAON,EAAOW,YAAY,MAAO,SAC7Dd,UAMb,ECpBA,EAnBuB,SAAH,GAAyC,IAAD,IAAlCmL,SAAAA,OAAQ,MAAG,IAAG,MAAEnK,KAAAA,OAAI,MAAG,KAAI,EAC7Cf,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MAC9B8K,EAAmB,IAAXD,EAEd,OACE,SAACpJ,EAAA,EAAG,CACFnB,GAAI,CACFwE,WAAW,mBAAD,OAAqBjF,EAAOsC,QAAQ,KAAI,gFACZ2I,EAAK,gBAAQjL,EAAOkL,WAAW,KAAI,YAAID,EAAK,qCAC5EjL,EAAOW,YAAY,MACzBO,aAAc,MACdF,MAAM,GAAD,OAAKH,EAAI,MACdI,OAAO,GAAD,OAAKJ,EAAI,QAIvB,E,kDC2YA,GAAesK,E,QAAAA,IApYO,WACpB,IAAMrL,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,IAAOH,EAAMI,QAAQC,MAE9BsE,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IACxC2G,GAAQ1G,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMyG,KAAK,IAC1C1J,GAAWC,EAAAA,EAAAA,MAEjB,GAAwB2C,EAAAA,EAAAA,WAAS,GAAM,eAAhC+G,EAAI,KAAEC,EAAO,KAEdC,EAAgB,WACpBD,GAAQ,EACV,EAEME,EAAe,WACnBF,GAAQ,EACV,EAEMG,EAAO,yCAAG,oGACO,SAAjBL,EAAMM,OAAiB,iBAMV,OALTC,GAAeC,EAAAA,EAAAA,IAAelK,EAAU+C,EAAKoH,OAC7CC,GAAqBC,EAAAA,EAAAA,IAAqBrK,EAAU+C,EAAKoH,OACzDG,GAAqBC,EAAAA,EAAAA,IAAqBvK,EAAU+C,EAAKoH,OACzDK,GAAuBC,EAAAA,EAAAA,IAA4BzK,EAAU+C,EAAKoH,OAClEO,GAAsBC,EAAAA,EAAAA,IAAsB3K,EAAU+C,EAAKoH,OACjEL,IAAe,SACTc,QAAQC,IAAI,CAChBZ,EAAcG,EAAoBE,EAClCE,EAAsBE,IACrB,KAAD,EACFb,IAAgB,4CAEnB,kBAdY,mCAgBPiB,EAAa,SAACC,GAClB,OAAQA,GACN,IAAK,QACH,OAAO,SAACC,EAAA,EAAa,CAACjM,GAAI,CAAEH,MAAON,EAAOW,YAAY,KAAM4F,SAAU,UACxE,IAAK,QAML,QACE,OAAO,SAACoG,EAAA,EAAQ,CAAClM,GAAI,CAAEH,MAAON,EAAOW,YAAY,KAAM4F,SAAU,UALnE,IAAK,WACH,OAAO,SAACT,EAAA,EAAW,CAACrF,GAAI,CAAEH,MAAON,EAAOW,YAAY,KAAM4F,SAAU,UACtE,IAAK,WACH,OAAO,SAACqG,EAAA,EAAS,CAACnM,GAAI,CAAEH,MAAON,EAAOW,YAAY,KAAM4F,SAAU,UAIxE,EA4BA,OA1BA3B,EAAAA,EAAAA,YAAU,WAaR,OAZAiI,SAASjN,MAAQ,mBAGC,mBAAhB6E,EAAKiH,QAA+C,gBAAhBjH,EAAKiH,QACxB,YAAjBN,EAAMM,OAENF,IAGAD,IAGK,WAAQ,CAEjB,GAAG,CACD9G,EAAKoH,MAAOpH,EAAKW,KAAMX,EAAKiH,OAAQN,EAAMM,UAG5C9G,EAAAA,EAAAA,YAAU,WAGR,OAFA6G,IAEO,WAAQ,CAEjB,GAAG,CAAChH,EAAKoH,SAGP,iCACE,SAACiB,EAAA,EAAQ,CACPrM,GAAI,CAAEH,MAAO,OAAQsC,OAAQ,SAAC9C,GAAK,OAAKA,EAAM8C,OAAOmK,OAAS,CAAC,GAC/D1B,KAAMA,EAAK,UAEX,SAAC2B,EAAA,EAAgB,CAAC1M,MAAM,eAG1B,UAACsB,EAAA,EAAG,CAAClB,EAAE,OAAOkG,GAAG,IAAI5F,MAAM,OAAM,WAE/B,UAACY,EAAA,EAAG,CAACW,QAAQ,OAAOE,eAAe,gBAAgBC,WAAW,SAAQ,WACpE,SAACuK,EAAA,EAAM,CAACrN,MAAM,YAAYC,SAAS,gCAEnC,SAAC+B,EAAA,EAAG,WACF,UAACsL,EAAA,EAAM,CACLzM,GAAI,CACFoC,gBAAiB7C,EAAOkL,WAAW,KACnC5K,MAAON,EAAOO,KAAK,KACnBgG,SAAU,OACV/F,WAAY,OACZmH,QAAS,aACT,WAEF,SAACwF,EAAA,EAAoB,CAAC1M,GAAI,CAAE2M,GAAI,UAAY,4BAQlD,UAACxL,EAAA,EAAG,CACFW,QAAQ,OACR8K,oBAAoB,kBACpBC,aAAa,QACbC,IAAI,OACJC,GAAG,OAAM,UAKW,YAAjBpC,EAAMM,QAAwBN,EAAMA,MACnCqC,OAAOjG,KAAK4D,EAAMA,OAAOsC,KAAI,SAACjB,GAC5B,IAAMkB,EAAOvC,EAAMA,MAAMqB,GACzB,OACE,SAAC,EAAO,CAEN7M,MAAO+N,EAAKC,MACZ/N,SAAU4M,EAAIoB,oBACd9J,KAAMyI,EAAWC,IAHZA,EAYX,IAEA,MAOJ,UAAC7K,EAAA,EAAG,CACFmJ,WAAY,CAAE9I,GAAI,UAAWG,GAAI,UACjC0L,QAAQ,SACRjL,gBAAiB7C,EAAOsC,QAAQ,KAChCyL,SAAS,OAAM,WAEf,SAACnM,EAAA,EAAG,CACFW,QAAQ,OACRE,eAAe,gBACfC,WAAW,SACXsL,aAAY,oBAAehO,EAAOsC,QAAQ,MAC1CtC,OAAQA,EAAOO,KAAK,KACpBoC,EAAE,OAAM,UAER,SAAC0B,EAAA,EAAU,CAAC/D,MAAON,EAAOO,KAAK,KAAMF,QAAQ,KAAKG,WAAW,MAAK,4BAKhD,YAAjB4K,EAAMM,QAAwBN,EAAM6C,YACnC7C,EAAM6C,YAAYP,KAAI,SAACtI,EAAM8I,GAAC,OAC5B,UAACtM,EAAA,EAAG,CAEFW,QAAQ,OACRE,eAAe,gBACfC,WAAW,SACXsL,aAAY,oBAAehO,EAAOsC,QAAQ,MAC1CK,EAAE,OAAM,WAER,UAACf,EAAA,EAAG,CAACW,QAAQ,OAAOC,cAAc,MAAMC,eAAe,SAAQ,WAC7D,SAAC0C,EAAA,EAAM,CAACvE,OAAQwE,EAAKxE,UACrB,UAACgB,EAAA,EAAG,CAACmB,GAAG,OAAM,WACZ,SAACsB,EAAA,EAAU,CACT/D,MAAON,EAAOW,YAAY,KAC1BN,QAAQ,KACRG,WAAW,MAAK,SAEf4E,EAAK+I,OAER,SAAC9J,EAAA,EAAU,CAAC/D,MAAON,EAAOO,KAAK,KAAK,SACjC6E,EAAKI,eAKZ,SAAC5D,EAAA,EAAG,CAACtB,MAAON,EAAOO,KAAK,KAAK,SAC1B6E,EAAKgJ,YAAaC,EAAAA,EAAAA,IAAajJ,EAAKgJ,cAGvC,SAACxM,EAAA,EAAG,CACFiB,gBAAiB7C,EAAOW,YAAY,KACpCgC,EAAE,WACFzB,aAAa,MACbqB,QAAQ,OACRC,cAAc,MACdC,eAAe,SACfC,WAAW,SACX3B,MAAO,CAAEuN,OAAQ,WAAY,UAE7B,SAACC,EAAA,EAAc,QACX,UAtCEnJ,EAAK+I,IAAG,YAAID,GAuChB,IAGR,SA8CN,UAACtM,EAAA,EAAG,CACFmJ,WAAY,CAAE9I,GAAI,UAAWG,GAAI,UACjC0L,QAAQ,SACRjL,gBAAiB7C,EAAOsC,QAAQ,KAChCyL,SAAS,OAAM,WAEf,SAACnM,EAAA,EAAG,CACFW,QAAQ,OACRE,eAAe,gBACfC,WAAW,SACXsL,aAAY,oBAAehO,EAAOsC,QAAQ,MAC1CtC,OAAQA,EAAOO,KAAK,KACpBoC,EAAE,OAAM,UAER,SAAC0B,EAAA,EAAU,CAAC/D,MAAON,EAAOO,KAAK,KAAMF,QAAQ,KAAKG,WAAW,MAAK,4BAKhD,YAAjB4K,EAAMM,QAAwBN,EAAMoD,YACnCpD,EAAMoD,YAAYd,KAAI,SAACe,EAAMP,GAAC,OAC5B,UAACtM,EAAA,EAAG,CAEFW,QAAQ,OACRE,eAAe,gBACfC,WAAW,SACXsL,aAAY,oBAAehO,EAAOsC,QAAQ,MAC1CK,EAAE,OAAM,WAER,UAACf,EAAA,EAAG,YACF,SAACyC,EAAA,EAAU,CACT/D,MAAON,EAAOW,YAAY,KAC1BN,QAAQ,KACRG,WAAW,MAAK,SAEfiO,EAAKN,OAER,SAAC9J,EAAA,EAAU,CAAC/D,MAAON,EAAOO,KAAK,KAAK,SACjCkO,EAAKC,MAAMlJ,YAGhB,SAAC5D,EAAA,EAAG,CAACtB,MAAON,EAAOO,KAAK,KAAK,SAC1BkO,EAAKL,YAAaC,EAAAA,EAAAA,IAAaI,EAAKL,cAEvC,gBACErN,MAAO,CACL8B,gBAAiB7C,EAAOW,YAAY,KACpCgH,QAAS,WACTzG,aAAc,MACdqB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZ4L,OAAQ,WACR,UAEF,SAACC,EAAA,EAAc,QACX,UAnCEE,EAAKN,IAAG,YAAID,GAoChB,IAGR,SAQN,UAACtM,EAAA,EAAG,CACFmJ,WAAY,CAAE9I,GAAI,UAAWG,GAAI,UACjC0L,QAAQ,SACRjL,gBAAiB7C,EAAOsC,QAAQ,KAChCK,EAAE,OAAM,WAER,SAAC0B,EAAA,EAAU,CAAChE,QAAQ,KAAKG,WAAW,MAAK,sCAIrB,YAAjB4K,EAAMM,QAAwBN,EAAMuD,oBACnC,UAAC/M,EAAA,EAAG,CACFW,QAAQ,OACRC,cAAc,SACdE,WAAW,SACXkE,GAAG,OAAM,WAET,SAAC,EAAc,CACb/F,KAAK,MACLmK,SAAUI,EAAMuD,mBAAmBC,eAErC,UAACvK,EAAA,EAAU,CACThE,QAAQ,KACRC,MAAON,EAAOW,YAAY,KAC1BF,GAAI,CAAEmG,GAAI,QAAS,UAElBwE,EAAMuD,mBAAmBE,kBAAiB,uBAE7C,SAACxK,EAAA,EAAU,oBACL+G,EAAMuD,mBAAmBG,cAAa,sCAC1C1D,EAAMuD,mBAAmBI,WAAU,sCAIvC,SAIN,UAACnN,EAAA,EAAG,CACFmJ,WAAY,CAAE9I,GAAI,UAAWG,GAAI,UACjC0L,QAAQ,SACRjL,gBAAiB7C,EAAOsC,QAAQ,KAAK,WAErC,SAAC+B,EAAA,EAAU,CACThE,QAAQ,KACRG,WAAW,MACXC,GAAI,CAAEkH,QAAS,oBAAqB,2BAKlB,YAAjByD,EAAMM,QAAwBN,EAAM4D,cACnC,SAACpN,EAAA,EAAG,CAACX,OAAO,QAAQ2F,GAAG,QAAO,UAC5B,SAAC,EAAQ,CAACC,KAAMuE,EAAM4D,iBAGxB,gBAQhB,G,wDC7ZO,IAoBMX,EAAe,SAACY,GAAiC,IAA3BC,EAAM,uDAAG,aAClCC,EAAU,IAAIC,KAAKH,GACnBI,EAAOF,EAAQG,cACfC,EAAQJ,EAAQK,WAAa,EAC7BC,EAAMN,EAAQO,UAEhBC,EAAaN,EAAKO,WAClBC,EAAcN,EAAQ,GAAK,IAAMA,EAAMK,WAAaL,EAAMK,WAC1DE,EAAYL,EAAM,GAAK,IAAMA,EAAIG,WAAaH,EAAIG,WAEtD,MAAe,eAAXV,EACOY,EAAY,IAAMD,EAAc,IAAMF,EAG1CA,EAAa,IAAME,EAAc,IAAMC,CAClD,C","sources":["components/Header.jsx","components/global/Avatar.jsx","components/global/Topbar.jsx","components/global/Sidebar.jsx","helpers/PageHOC.jsx","components/BarChart.jsx","components/StatBox.jsx","components/ProgressCircle.jsx","pages/dashboard/Index.jsx","utils/dateUtils.js"],"sourcesContent":["import { Typography, Box, useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\n\nconst Header = ({ title, subtitle }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  return (\n    <Box mb=\"30px\">\n      <Typography\n        variant=\"h2\"\n        color={colors.grey[100]}\n        fontWeight=\"bold\"\n        sx={{ m: \"0 0 5px 0\" }}\n      >\n        {title}\n      </Typography>\n      <Typography variant=\"h5\" color={colors.greenAccent[400]}>\n        {subtitle}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Header;\n","import React from 'react'\r\n\r\nconst Avatar = ({ avatar, size = '40px', fit = 'cover' }) => {\r\n    const style = {\r\n        width: size,\r\n        height: size,\r\n        borderRadius: '50%',\r\n        objectFit: fit,\r\n    }\r\n\r\n    if (avatar && avatar.url) {\r\n        return (\r\n            <div style={style}>\r\n                <img\r\n                    src={avatar.url}\r\n                    style={style}\r\n                    alt=\"avatar\"\r\n                    width={size}\r\n                    height={size}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            <img\r\n                src='../../avatar.png'\r\n                style={style}\r\n                alt=\"avatar\"\r\n                width={size}\r\n                height={size}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import { Box, IconButton, useTheme } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ColorModeContext, tokens } from \"../../theme\";\nimport InputBase from \"@mui/material/InputBase\";\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { logout } from '../../redux/slices/authSlice';\n\nconst Topbar = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const colorMode = useContext(ColorModeContext);\n  const dispatch = useDispatch();\n\n  // window.addEventListener(\"scroll\", function () {\n  //   if (window.scrollY > 40) {\n  //     setScolled(true);\n  //   } else {\n  //     setScolled(false);\n  //   }\n  // });\n\n  const logoutUser = () => {\n    dispatch(logout());\n  }\n\n  return (\n    <Box\n      position=\"fixed\"\n      top=\"0\"\n      left=\"0\"\n      right=\"0\"\n      height={{ xs: \"80px\", sm: \"80px\", md: \"80px\", lg: \"80px\" }}\n      bgcolor={colors.primary[500]}\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      p={2}\n      zIndex=\"1000\"\n    >\n\n      {/* LOGO */}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <img\n          alt=\"logo\"\n          width=\"auto\"\n          height='48px'\n          src={`../../logo.png`}\n        />\n      </Box>\n\n      {/* SEARCH BAR */}\n      <Box\n        display=\"flex\"\n        backgroundColor={colors.primary[400]}\n        borderRadius=\"4px\"\n        height={{ xs: \"40px\", sm: \"40px\", md: \"40px\", lg: \"40px\" }}\n      >\n        <InputBase sx={{ ml: 2, flex: 1 }} placeholder=\"Search\" />\n        <IconButton type=\"button\" sx={{ p: 1 }}>\n          <SearchIcon />\n        </IconButton>\n      </Box>\n\n      {/* ICONS */}\n      <Box display=\"flex\">\n        <IconButton onClick={colorMode.toggleColorMode}>\n          {theme.palette.mode === \"dark\" ? (\n            <DarkModeOutlinedIcon />\n          ) : (\n            <LightModeOutlinedIcon />\n          )}\n        </IconButton>\n        <IconButton>\n          <NotificationsOutlinedIcon />\n        </IconButton>\n        <IconButton>\n          <SettingsOutlinedIcon />\n        </IconButton>\n        <IconButton onClick={logoutUser}>\n          <PersonOutlinedIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Topbar;\n","import { useState, useEffect } from \"react\";\nimport { Sidebar as ProSidebar, Menu, MenuItem } from \"react-pro-sidebar\";\nimport { Box, IconButton, Typography, useTheme } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { tokens } from \"../../theme\";\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport ListAltOutlinedIcon from \"@mui/icons-material/ListAltOutlined\";\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\nimport CalendarTodayOutlinedIcon from \"@mui/icons-material/CalendarTodayOutlined\";\nimport HelpOutlineOutlinedIcon from \"@mui/icons-material/HelpOutlineOutlined\";\nimport BarChartOutlinedIcon from \"@mui/icons-material/BarChartOutlined\";\nimport PieChartOutlineOutlinedIcon from \"@mui/icons-material/PieChartOutlineOutlined\";\nimport TimelineOutlinedIcon from \"@mui/icons-material/TimelineOutlined\";\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport MapOutlinedIcon from \"@mui/icons-material/MapOutlined\";\nimport Avatar from \"./Avatar\";\n\nconst Item = ({ title, to, icon, selected, setSelected }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const navigate = useNavigate();\n\n  return (\n    <MenuItem\n      active={selected === title}\n      style={{\n        color: colors.grey[100],\n      }}\n      onClick={() => {\n        setSelected(title);\n        navigate(to);\n      }}\n      icon={icon}\n    >\n      <Typography>{title}</Typography>\n    </MenuItem>\n  );\n};\n\nconst Sidebar = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [isCollapsed, setIsCollapsed] = useState(true);\n  const [selected, setSelected] = useState(\"Dashboard\");\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    window.addEventListener('load', () => {\n      if (window.innerWidth <= 768) {\n        setIsCollapsed(true);\n      }\n      else {\n        setIsCollapsed(false);\n      }\n    });\n\n    window.addEventListener(\"resize\", () => {\n      if (window.innerWidth <= 768) {\n        setIsCollapsed(true);\n      }\n      else {\n        setIsCollapsed(false);\n      }\n    });\n\n    return () => {\n      window.removeEventListener(\"load\", () => { });\n      window.removeEventListener(\"resize\", () => { });\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        \"& .sidebar-inner\": {\n          background: `${colors.primary[400]} !important`,\n        },\n        \"& .menu-anchor\": {\n          background: `transparent !important`,\n          color: `inherit !important`,\n        },\n        \"& .menu-item:hover\": {\n          color: \"#868dfb !important\",\n        },\n        \"& .menu-item.active\": {\n          color: \"#6870fa !important\",\n        },\n      }}\n    >\n      <ProSidebar collapsed={isCollapsed}>\n        <Menu>\n          {\n            !isCollapsed ?\n              <Box m=\"20px 0\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Avatar\n                  avatar={auth.user?.avatar}\n                  size=\"100px\"\n                />\n\n                <Box textAlign=\"center\">\n                  <Typography\n                    variant=\"h3\"\n                    color={colors.grey[100]}\n                    fontWeight=\"bold\"\n                    sx={{ m: \"10px 0 0 0\" }}\n                  >\n                    {auth.user?.fname + \" \" + auth.user?.lname}\n                  </Typography>\n\n                  <Typography variant=\"h5\" color={colors.greenAccent[500]}>\n                    {'@' + auth.user?.uname}\n                  </Typography>\n                </Box>\n              </Box>\n              : null\n          }\n\n          <Box paddingLeft={isCollapsed ? undefined : \"5%\"}>\n            <Item\n              title=\"Dashboard\"\n              to=\"/\"\n              icon={<HomeOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n\n            <Typography\n              variant=\"h6\"\n              color={colors.grey[300]}\n              sx={{ m: \"15px 0 5px 20px\" }}\n            >\n              Data\n            </Typography>\n            <Item\n              title=\"Manage Users\"\n              to=\"/users\"\n              icon={<PeopleOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Manage Posts\"\n              to=\"/posts\"\n              icon={<ListAltOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Manage Comments\"\n              to=\"/comments\"\n              icon={<CommentIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n\n            <Typography\n              variant=\"h6\"\n              color={colors.grey[300]}\n              sx={{ m: \"15px 0 5px 20px\" }}\n            >\n              Pages\n            </Typography>\n            <Item\n              title=\"Profile Form\"\n              to=\"/form\"\n              icon={<PersonOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Calendar\"\n              to=\"/calendar\"\n              icon={<CalendarTodayOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"FAQ Page\"\n              to=\"/faq\"\n              icon={<HelpOutlineOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n\n            <Typography\n              variant=\"h6\"\n              color={colors.grey[300]}\n              sx={{ m: \"15px 0 5px 20px\" }}\n            >\n              Charts\n            </Typography>\n            <Item\n              title=\"Bar Chart\"\n              to=\"/bar\"\n              icon={<BarChartOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Pie Chart\"\n              to=\"/pie\"\n              icon={<PieChartOutlineOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Line Chart\"\n              to=\"/line\"\n              icon={<TimelineOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n            <Item\n              title=\"Geography Chart\"\n              to=\"/geography\"\n              icon={<MapOutlinedIcon />}\n              selected={selected}\n              setSelected={setSelected}\n            />\n          </Box>\n\n          {!isCollapsed ? (\n            <div style={{\n              margin: \"10px 10px 20px 0\",\n              color: colors.grey[100],\n              display: \"flex\",\n              justifyContent: \"end\",\n              alignItems: \"center\",\n            }}>\n              <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\n                <ArrowBackIosNewIcon\n                  sx={{\n                    fontSize: \"16px\",\n                    fontWeight: \"bold\"\n                  }} />\n              </IconButton>\n            </div>\n          ) :\n            <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              margin: \"10px 0\",\n              color: colors.grey[100],\n            }}>\n              <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\n                <ArrowForwardIosIcon\n                  sx={{\n                    fontSize: \"16px\",\n                    fontWeight: \"bold\"\n                  }} />\n              </IconButton>\n            </div>\n          }\n\n        </Menu>\n      </ProSidebar>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","import Topbar from \"../components/global/Topbar\";\r\nimport Sidebar from \"../components/global/Sidebar\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst PageHOC = (WrappedComponent) => {\r\n    return (props) => {\r\n        return (\r\n            <>\r\n                <Topbar />\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"row\"\r\n                    width=\"100%\"\r\n                    minWidth=\"100%\"\r\n                    mt={{ xs: \"80px\", sm: \"80px\", md: \"80px\", lg: \"80px\" }}\r\n                >\r\n                    <Sidebar />\r\n                    <WrappedComponent {...props} />\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default PageHOC;","import { useTheme } from \"@mui/material\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { tokens } from \"../theme\";\n\nconst BarChart = ({ data }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <ResponsiveBar\n      data={data}\n      theme={{\n        // added\n        axis: {\n          domain: {\n            line: {\n              stroke: colors.grey[100],\n            },\n          },\n          legend: {\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n          ticks: {\n            line: {\n              stroke: colors.grey[100],\n              strokeWidth: 1,\n            },\n            text: {\n              fill: colors.grey[100],\n            },\n          },\n        },\n        legends: {\n          text: {\n            fill: colors.grey[100],\n          },\n        },\n      }}\n      keys={[\"users\", \"posts\", \"comments\"]}\n      indexBy=\"month\"\n      margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n      padding={0.3}\n      valueScale={{ type: \"linear\" }}\n      indexScale={{ type: \"band\", round: true }}\n      colors={{ scheme: \"accent\" }}\n      borderColor={{\n        from: 'color',\n        modifiers: [\n          ['darker', .6],\n          ['opacity', .5]\n        ]\n      }}\n      colorBy=\"id\"\n      defs={[\n        {\n          id: \"dots\",\n          type: \"patternDots\",\n          background: \"inherit\",\n          color: \"#38bcb2\",\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: \"lines\",\n          type: \"patternLines\",\n          background: \"inherit\",\n          color: \"#eed312\",\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      // fill={[\n      //   {\n      //     match: {\n      //       id: 'users'\n      //     },\n      //     id: 'dots'\n      //   },\n      //   {\n      //     match: {\n      //       id: 'comments'\n      //     },\n      //     id: 'lines'\n      //   }\n      // ]}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0, // changed\n        legendPosition: \"middle\",\n        legendOffset: 32,\n      }}\n      axisLeft={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0, // changed\n        legendPosition: \"middle\",\n        legendOffset: -40,\n      }}\n      enableLabel={true}\n      label=\"formattedValue\"\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor={{\n        \"from\": \"theme\",\n        \"theme\": \"labels.text.fill\"\n      }}\n      legends={[\n        {\n          dataFrom: \"keys\",\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 120,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemWidth: 100,\n          itemHeight: 20,\n          itemDirection: \"left-to-right\",\n          itemOpacity: 0.85,\n          symbolSize: 20,\n          effects: [\n            {\n              on: \"hover\",\n              style: {\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n      animate={true}\n      motionStiffness={90}\n      motionDamping={15}\n      role=\"application\"\n      tooltip={e => {\n        return (\n          <div\n            style={{\n              background: \"#f0f0f0\",\n              color: \"#333\",\n              padding: \"4px 8px\",\n              borderRadius: \"4px\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              fontSize: \"13px\",\n            }}\n          >\n            <div style={{\n              backgroundColor: e.color,\n              width: \"10px\",\n              height: \"10px\",\n            }} />\n            <div style={{ marginLeft: \"8px\" }}>{`${e.id} - `}</div>\n            <div style={{ fontWeight: \"bold\", marginLeft: \"4px\" }}>{e.value}</div>\n          </div>\n        );\n      }}\n      barAriaLabel={function (e) {\n        return e.id + \" \" + e.value;\n      }}\n    />\n  );\n};\n\nexport default BarChart;\n","import { Box, Typography, useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\n\nconst StatBox = ({ title, subtitle, icon }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  return (\n    <Box\n      gridColumn=\"span 3\"\n      backgroundColor={colors.primary[400]}\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box width=\"100%\" m=\"0 30px\">\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            {icon}\n            <Typography\n              variant=\"h4\"\n              fontWeight=\"bold\"\n              sx={{ color: colors.grey[100] }}\n              mt=\"8px\"\n            >\n              {title}\n            </Typography>\n          </Box>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt=\"8px\">\n          <Typography variant=\"h5\" sx={{ color: colors.greenAccent[500] }}>\n            {subtitle}\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default StatBox;\n","import { Box, useTheme } from \"@mui/material\";\nimport { tokens } from \"../theme\";\n\nconst ProgressCircle = ({ progress = \"0\", size = \"40\" }) => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const angle = progress * 360;\n\n  return (\n    <Box\n      sx={{\n        background: `radial-gradient(${colors.primary[400]} 55%, transparent 56%),\n            conic-gradient(transparent 0deg ${angle}deg, ${colors.blueAccent[500]} ${angle}deg 360deg),\n            ${colors.greenAccent[500]}`,\n        borderRadius: \"50%\",\n        width: `${size}px`,\n        height: `${size}px`,\n      }}\n    />\n  );\n};\n\nexport default ProgressCircle;\n","import { useState, useEffect } from 'react';\nimport { Box, Button, Typography, useTheme } from \"@mui/material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { tokens } from \"../../theme\";\nimport DownloadOutlinedIcon from \"@mui/icons-material/DownloadOutlined\";\nimport EmailIcon from \"@mui/icons-material/Email\";\nimport ListIcon from \"@mui/icons-material/List\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport CommentIcon from \"@mui/icons-material/Comment\";\nimport Header from \"../../components/Header\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport BarChart from \"../../components/BarChart\";\nimport StatBox from \"../../components/StatBox\";\nimport ProgressCircle from \"../../components/ProgressCircle\";\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport {\n  getStatsAction,\n  getRecentPostsAction,\n  getRecentUsersAction,\n  getVerifiedUsersStatsAction,\n  getMonthlyStatsAction,\n} from '../../redux/actions';\nimport { toDateString } from '../../utils/dateUtils';\nimport Avatar from '../../components/global/Avatar';\nimport PageHOC from '../../helpers/PageHOC';\n\nconst DashboardPage = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  const auth = useSelector((state) => state.auth);\n  const stats = useSelector((state) => state.stats);\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n\n  const closeBackdrop = () => {\n    setOpen(false);\n  };\n\n  const openBackdrop = () => {\n    setOpen(true);\n  };\n\n  const getData = async () => {\n    if (stats.status === 'idle') {\n      const statsPromise = getStatsAction(dispatch, auth.token);\n      const recentUsersPromise = getRecentUsersAction(dispatch, auth.token);\n      const recentPostsPromise = getRecentPostsAction(dispatch, auth.token);\n      const verifiedUsersPromise = getVerifiedUsersStatsAction(dispatch, auth.token);\n      const monthlyStatsPromise = getMonthlyStatsAction(dispatch, auth.token);\n      openBackdrop();\n      await Promise.all([\n        statsPromise, recentUsersPromise, recentPostsPromise,\n        verifiedUsersPromise, monthlyStatsPromise\n      ]);\n      closeBackdrop();\n    }\n  }\n\n  const renderIcon = (key) => {\n    switch (key) {\n      case 'users':\n        return <PersonAddIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n      case 'posts':\n        return <ListIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n      case 'comments':\n        return <CommentIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n      case 'messages':\n        return <EmailIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n      default:\n        return <ListIcon sx={{ color: colors.greenAccent[600], fontSize: \"32px\" }} />;\n    }\n  }\n\n  useEffect(() => {\n    document.title = \"Home | Dashboard\";\n\n    if (\n      auth.status === 'authenticating' || auth.status === 'loadingUser' ||\n      stats.status === 'loading'\n    ) {\n      openBackdrop();\n    }\n    else {\n      closeBackdrop();\n    }\n\n    return () => { }\n\n  }, [\n    auth.token, auth.user, auth.status, stats.status\n  ]);\n\n  useEffect(() => {\n    getData();\n\n    return () => { }\n\n  }, [auth.token]);\n\n  return (\n    <>\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      <Box m=\"20px\" mt=\"0\" width=\"100%\">\n        {/* HEADER */}\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Header title=\"DASHBOARD\" subtitle=\"Welcome to admin dashboard\" />\n\n          <Box>\n            <Button\n              sx={{\n                backgroundColor: colors.blueAccent[700],\n                color: colors.grey[100],\n                fontSize: \"14px\",\n                fontWeight: \"bold\",\n                padding: \"10px 20px\",\n              }}\n            >\n              <DownloadOutlinedIcon sx={{ mr: \"10px\" }} />\n              Download Reports\n            </Button>\n          </Box>\n        </Box>\n\n        {/* GRID & CHARTS */}\n\n        <Box\n          display=\"grid\"\n          gridTemplateColumns=\"repeat(12, 1fr)\"\n          gridAutoRows=\"140px\"\n          gap=\"20px\"\n          pb=\"20px\"\n        >\n          {/* Row 1 Start */}\n\n          {\n            (stats.status === 'success' && stats.stats) ?\n              Object.keys(stats.stats).map((key) => {\n                const stat = stats.stats[key];\n                return (\n                  <StatBox\n                    key={key}\n                    title={stat.total}\n                    subtitle={key.toLocaleUpperCase()}\n                    icon={renderIcon(key)}\n                  // progress={stat.progress ? stat.progress / 100 : 0}\n                  // increase={\n                  //   stat.progress !== null && stat.progress >= 0 ?\n                  //     `+${stat.progress}%` :\n                  //     `${stat.progress}%`\n                  // }\n                  />\n                );\n              })\n              :\n              null\n          }\n\n          {/* Row 1 End */}\n\n          {/* Row 2 Start */}\n\n          <Box\n            gridColumn={{ xs: \"span 12\", lg: \"span 6\" }}\n            gridRow=\"span 3\"\n            backgroundColor={colors.primary[400]}\n            overflow=\"auto\"\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              borderBottom={`4px solid ${colors.primary[500]}`}\n              colors={colors.grey[100]}\n              p=\"15px\"\n            >\n              <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"600\">\n                Recent Users\n              </Typography>\n            </Box>\n            {\n              (stats.status === 'success' && stats.recentUsers) ?\n                stats.recentUsers.map((user, i) => (\n                  <Box\n                    key={`${user._id}-${i}`}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    borderBottom={`4px solid ${colors.primary[500]}`}\n                    p=\"15px\"\n                  >\n                    <Box display='flex' flexDirection='row' justifyContent='center'>\n                      <Avatar avatar={user.avatar} />\n                      <Box ml='20px'>\n                        <Typography\n                          color={colors.greenAccent[500]}\n                          variant=\"h5\"\n                          fontWeight=\"600\"\n                        >\n                          {user._id}\n                        </Typography>\n                        <Typography color={colors.grey[100]}>\n                          {user.uname}\n                        </Typography>\n                      </Box>\n                    </Box>\n\n                    <Box color={colors.grey[100]}>\n                      {user.createdAt && toDateString(user.createdAt)}\n                    </Box>\n\n                    <Box\n                      backgroundColor={colors.greenAccent[500]}\n                      p=\"5px 10px\"\n                      borderRadius=\"4px\"\n                      display='flex'\n                      flexDirection='row'\n                      justifyContent='center'\n                      alignItems='center'\n                      style={{ cursor: 'pointer' }}\n                    >\n                      <VisibilityIcon />\n                    </Box>\n                  </Box>\n                ))\n                :\n                null\n            }\n          </Box>\n\n          {/* <Box\n            gridColumn=\"span 8\"\n            gridRow=\"span 2\"\n            sx={{ gridColumn: \"span 12\", gridRow: \"span 2\" }}\n            backgroundColor={colors.primary[400]}\n          >\n            <Box\n              mt=\"25px\"\n              p=\"0 30px\"\n              display=\"flex \"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Box>\n                <Typography\n                  variant=\"h5\"\n                  fontWeight=\"600\"\n                  color={colors.grey[100]}\n                >\n                  Recent Users\n                </Typography>\n                <Typography\n                  variant=\"h3\"\n                  fontWeight=\"bold\"\n                  color={colors.greenAccent[500]}\n                >\n                  $59,342.32\n                </Typography>\n              </Box>\n              <Box>\n                <IconButton>\n                  <DownloadOutlinedIcon\n                    sx={{ fontSize: \"26px\", color: colors.greenAccent[500] }}\n                  />\n                </IconButton>\n              </Box>\n            </Box>\n            <Box height=\"250px\" m=\"-20px 0 0 0\">\n              <LineChart isDashboard={true} />\n            </Box>\n          </Box> */}\n\n          <Box\n            gridColumn={{ xs: \"span 12\", lg: \"span 6\" }}\n            gridRow=\"span 3\"\n            backgroundColor={colors.primary[400]}\n            overflow=\"auto\"\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              borderBottom={`4px solid ${colors.primary[500]}`}\n              colors={colors.grey[100]}\n              p=\"15px\"\n            >\n              <Typography color={colors.grey[100]} variant=\"h5\" fontWeight=\"600\">\n                Recent Posts\n              </Typography>\n            </Box>\n            {\n              (stats.status === 'success' && stats.recentPosts) ?\n                stats.recentPosts.map((post, i) => (\n                  <Box\n                    key={`${post._id}-${i}`}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    borderBottom={`4px solid ${colors.primary[500]}`}\n                    p=\"15px\"\n                  >\n                    <Box>\n                      <Typography\n                        color={colors.greenAccent[500]}\n                        variant=\"h5\"\n                        fontWeight=\"600\"\n                      >\n                        {post._id}\n                      </Typography>\n                      <Typography color={colors.grey[100]}>\n                        {post.owner.uname}\n                      </Typography>\n                    </Box>\n                    <Box color={colors.grey[100]}>\n                      {post.createdAt && toDateString(post.createdAt)}\n                    </Box>\n                    <div\n                      style={{\n                        backgroundColor: colors.greenAccent[500],\n                        padding: '5px 10px',\n                        borderRadius: '4px',\n                        display: 'flex',\n                        flexDirection: 'row',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        cursor: 'pointer'\n                      }}\n                    >\n                      <VisibilityIcon />\n                    </div>\n                  </Box>\n                ))\n                :\n                null\n            }\n          </Box>\n\n          {/* Row 2 End */}\n\n          {/* Row 3 Start */}\n\n          <Box\n            gridColumn={{ xs: \"span 12\", lg: \"span 4\" }}\n            gridRow=\"span 2\"\n            backgroundColor={colors.primary[400]}\n            p=\"20px\"\n          >\n            <Typography variant=\"h5\" fontWeight=\"600\">\n              Blue Tick Verified Users\n            </Typography>\n            {\n              (stats.status === 'success' && stats.verifiedUsersStats) ?\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  alignItems=\"center\"\n                  mt=\"25px\"\n                >\n                  <ProgressCircle\n                    size=\"144\"\n                    progress={stats.verifiedUsersStats.roundedUnit}\n                  />\n                  <Typography\n                    variant=\"h5\"\n                    color={colors.greenAccent[500]}\n                    sx={{ mt: \"15px\" }}\n                  >\n                    {stats.verifiedUsersStats.roundedPercentage}% verified users\n                  </Typography>\n                  <Typography>\n                    {`${stats.verifiedUsersStats.verifiedUsers} out of\n                  ${stats.verifiedUsersStats.totalUsers} users are blue tick verified`}\n                  </Typography>\n                </Box>\n                :\n                null\n            }\n          </Box>\n\n          <Box\n            gridColumn={{ xs: \"span 12\", lg: \"span 8\" }}\n            gridRow=\"span 2\"\n            backgroundColor={colors.primary[400]}\n          >\n            <Typography\n              variant=\"h5\"\n              fontWeight=\"600\"\n              sx={{ padding: \"30px 30px 0 30px\" }}\n            >\n              Monthly Stats\n            </Typography>\n            {\n              (stats.status === 'success' && stats.monthlyStats) ?\n                <Box height=\"250px\" mt=\"-20px\">\n                  <BarChart data={stats.monthlyStats} />\n                </Box>\n                :\n                null\n            }\n          </Box>\n\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default PageHOC(DashboardPage);\n","export const isSameDate = (date, date2, compareWithToday = false) => {\r\n    date = new Date(date);\r\n\r\n    if (date2 !== undefined && date2 !== null && date2 !== '' && date2 !== 'Invalid Date') {\r\n        date2 = new Date(date2);\r\n    }\r\n\r\n    if (compareWithToday) {\r\n        const today = new Date();\r\n\r\n        return date.getFullYear() === today.getFullYear() &&\r\n            date.getMonth() === today.getMonth() &&\r\n            date.getDate() === today.getDate();\r\n    }\r\n\r\n    return date.getFullYear() === date2.getFullYear() &&\r\n        date.getMonth() === date2.getMonth() &&\r\n        date.getDate() === date2.getDate();\r\n};\r\n\r\nexport const toDateString = (date, format = \"dd-mm-yyyy\") => {\r\n    const dateObj = new Date(date);\r\n    const year = dateObj.getFullYear();\r\n    const month = dateObj.getMonth() + 1;\r\n    const day = dateObj.getDate();\r\n\r\n    let yearString = year.toString();\r\n    let monthString = month < 10 ? '0' + month.toString() : month.toString();\r\n    let dayString = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    if (format === \"dd-mm-yyyy\") {\r\n        return dayString + '-' + monthString + '-' + yearString;\r\n    }\r\n\r\n    return yearString + '-' + monthString + '-' + dayString;\r\n}\r\n\r\nexport const toTimeString = (date, is24HourFormat = false, showSeconds = false) => {\r\n    const dateObj = new Date(date);\r\n    const hours = dateObj.getHours();\r\n    const minutes = dateObj.getMinutes();\r\n    const seconds = dateObj.getSeconds();\r\n\r\n    let hoursString = hours < 10 ? '0' + hours.toString() : hours.toString();\r\n    let minutesString = minutes < 10 ? '0' + minutes.toString() : minutes.toString();\r\n    let secondsString = seconds < 10 ? '0' + seconds.toString() : seconds.toString();\r\n\r\n    let timeString = hoursString + ':' + minutesString;\r\n\r\n    if (!is24HourFormat) {\r\n        if (hours > 12) {\r\n            hoursString = (hours - 12).toString();\r\n        } else if (hours === 0) {\r\n            hoursString = '12';\r\n        }\r\n        timeString = hoursString + ':' + minutesString + ' ' + (hours >= 12 ? 'PM' : 'AM');\r\n    }\r\n\r\n    if (showSeconds) {\r\n        timeString = timeString + ':' + secondsString;\r\n    }\r\n\r\n    return timeString;\r\n}\r\n\r\nexport const toDateTimeString = (date, is24HourFormat = false, showSeconds = false) => {\r\n    return toDateString(date) + ' ' + toTimeString(date, is24HourFormat, showSeconds);\r\n}\r\n\r\nexport const toTimeAgo = (date) => {\r\n    const dateObj = new Date(date);\r\n    const now = new Date();\r\n    const seconds = Math.floor((now - dateObj) / 1000);\r\n\r\n    let interval = Math.floor(seconds / 31536000);\r\n\r\n    if (interval > 1) {\r\n        return interval + ' years ago';\r\n    }\r\n\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n        return interval + ' months ago';\r\n    }\r\n\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n        return interval + ' days ago';\r\n    }\r\n\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n        return interval + ' hours ago';\r\n    }\r\n\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval > 1) {\r\n        return interval + ' minutes ago';\r\n    }\r\n\r\n    return Math.floor(seconds) + ' seconds ago';\r\n}\r\n"],"names":["title","subtitle","theme","useTheme","colors","tokens","palette","mode","mb","variant","color","grey","fontWeight","sx","m","greenAccent","avatar","size","fit","style","width","height","borderRadius","objectFit","url","src","alt","colorMode","useContext","ColorModeContext","dispatch","useDispatch","Box","position","top","left","right","xs","sm","md","lg","bgcolor","primary","display","flexDirection","justifyContent","alignItems","p","zIndex","backgroundColor","InputBase","ml","flex","placeholder","IconButton","type","Search","onClick","toggleColorMode","DarkModeOutlined","LightModeOutlined","NotificationsOutlined","SettingsOutlined","logout","PersonOutlined","Item","to","icon","selected","setSelected","navigate","useNavigate","active","Typography","useState","isCollapsed","setIsCollapsed","auth","useSelector","state","useEffect","window","addEventListener","innerWidth","removeEventListener","background","collapsed","Avatar","user","textAlign","fname","lname","uname","paddingLeft","undefined","HomeOutlined","PeopleOutlined","ListAltOutlined","Comment","CalendarTodayOutlined","HelpOutlineOutlined","BarChartOutlined","PieChartOutlineOutlined","TimelineOutlined","MapOutlined","margin","ArrowForwardIos","fontSize","ArrowBackIosNew","WrappedComponent","props","minWidth","mt","data","axis","domain","line","stroke","legend","text","fill","ticks","strokeWidth","legends","keys","indexBy","bottom","padding","valueScale","indexScale","round","scheme","borderColor","from","modifiers","colorBy","defs","id","stagger","rotation","lineWidth","spacing","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","axisLeft","enableLabel","label","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","animate","motionStiffness","motionDamping","role","tooltip","e","marginLeft","value","barAriaLabel","gridColumn","progress","angle","blueAccent","PageHOC","stats","open","setOpen","closeBackdrop","openBackdrop","getData","status","statsPromise","getStatsAction","token","recentUsersPromise","getRecentUsersAction","recentPostsPromise","getRecentPostsAction","verifiedUsersPromise","getVerifiedUsersStatsAction","monthlyStatsPromise","getMonthlyStatsAction","Promise","all","renderIcon","key","PersonAdd","List","Email","document","Backdrop","drawer","CircularProgress","Header","Button","DownloadOutlined","mr","gridTemplateColumns","gridAutoRows","gap","pb","Object","map","stat","total","toLocaleUpperCase","gridRow","overflow","borderBottom","recentUsers","i","_id","createdAt","toDateString","cursor","Visibility","recentPosts","post","owner","verifiedUsersStats","roundedUnit","roundedPercentage","verifiedUsers","totalUsers","monthlyStats","date","format","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","yearString","toString","monthString","dayString"],"sourceRoot":""}