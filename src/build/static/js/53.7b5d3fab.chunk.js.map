{"version":3,"file":"static/js/53.7b5d3fab.chunk.js","mappings":"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","sources":["pages/auth/reset-password/index.jsx","../node_modules/.pnpm/@mui+icons-material@5.10.9_qxyw2t6q3rtqm4qs6kuvqglmeu/node_modules/@mui/icons-material/Visibility.js","../node_modules/.pnpm/@mui+icons-material@5.10.9_qxyw2t6q3rtqm4qs6kuvqglmeu/node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useLocation, NavLink } from \"react-router-dom\";\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport { resetPasswordAction } from '../../../redux/actions';\r\n\r\nconst ResetPassword = () => {\r\n    const auth = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [otp, setOtp] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showConfPassword, setShowConfPassword] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const closeBackdrop = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const openBackdrop = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const onClickBtnEvent = (e) => async (dispatch) => {\r\n        e.preventDefault();\r\n\r\n        openBackdrop();\r\n\r\n        await resetPasswordAction(dispatch, otp, password, confirmPassword);\r\n\r\n        closeBackdrop();\r\n\r\n        if (auth.status === 'passwordReset') {\r\n            navigate('/auth/login', { replace: true });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const returnUrl = location.state?.from?.pathname || '/';\r\n\r\n        if (auth.token && auth.user && auth.status === 'userLoaded') {\r\n            navigate(returnUrl, { replace: true });\r\n        }\r\n\r\n        return () => { }\r\n\r\n    }, [\r\n        auth.token, auth.user, navigate, auth.status,\r\n        location.state?.from?.pathname\r\n    ]);\r\n\r\n    return (\r\n        <div className=\"app__flex\" style={{\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n        }}>\r\n            {\r\n                auth.status === 'error' &&\r\n                <div className=\"app__error_box\">\r\n                    <p>{auth.error}</p>\r\n                </div>\r\n            }\r\n\r\n            <form className=\"app__box__form_container\"\r\n                onSubmit={(e) => dispatch(onClickBtnEvent(e))}>\r\n\r\n                <Backdrop\r\n                    sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                    open={open}\r\n                    onClick={closeBackdrop}\r\n                >\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n\r\n                <p className=\"title\">Reset your password</p>\r\n\r\n                <p style={{\r\n                    marginBottom: \"0.5rem\",\r\n                    fontSize: \"0.95rem\",\r\n                }}>\r\n                    Enter the OTP sent to your email address and a new password.\r\n                </p>\r\n\r\n                <div className=\"app__form_control\">\r\n                    <input\r\n                        type=\"tel\"\r\n                        pattern=\"[0-9]*\"\r\n                        placeholder=\"OTP\"\r\n                        name=\"otp\"\r\n                        required\r\n                        disabled={auth.status === 'resetPassword'}\r\n                        value={otp}\r\n                        maxLength={6}\r\n                        onChange={(e) => {\r\n                            const re = /^[0-9\\b]+$/;\r\n                            if (\r\n                                e.target.value.length <= 6 &&\r\n                                (e.target.value === '' || re.test(e.target.value))\r\n                            ) {\r\n                                setOtp(e.target.value);\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"app__form_control\">\r\n                    <input\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"New Password\"\r\n                        name=\"newPassword\"\r\n                        required\r\n                        disabled={auth.status === 'resetPassword'}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <div className=\"password_toggle_btn\">\r\n                        {\r\n                            showPassword ?\r\n                                <VisibilityIcon\r\n                                    onClick={() => setShowPassword(false)}\r\n                                />\r\n                                :\r\n                                <VisibilityOffIcon\r\n                                    onClick={() => setShowPassword(true)}\r\n                                />\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"app__form_control\">\r\n                    <input\r\n                        type={showConfPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"confirmPassword\"\r\n                        required\r\n                        disabled={auth.status === 'resetPassword'}\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                    <div className=\"password_toggle_btn\">\r\n                        {\r\n                            showConfPassword ?\r\n                                <VisibilityIcon\r\n                                    onClick={() => setShowConfPassword(false)}\r\n                                />\r\n                                :\r\n                                <VisibilityOffIcon\r\n                                    onClick={() => setShowConfPassword(true)}\r\n                                />\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{\r\n                    width: '100%',\r\n                    marginTop: '1rem',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-start'\r\n                }}>\r\n                    <NavLink to=\"/auth/login\">\r\n                        <div className=\"app__text_btn\">Login to account</div>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div style={{\r\n                    width: '100%',\r\n                    marginTop: '2rem',\r\n                }}>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"reset password\"\r\n                        disabled={auth.status === 'resetPassword'}\r\n                        className=\"app__filled_btn app__form_control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"app__form_control\">\r\n                    <span>\r\n                        Don&apos;t have an OTP?\r\n                    </span>\r\n                    <NavLink to=\"/auth/forgot-password\">\r\n                        <div className=\"app__text_btn\">Get OTP</div>\r\n                    </NavLink>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;"],"names":["auth","useSelector","state","dispatch","useDispatch","navigate","useNavigate","location","useLocation","useState","otp","setOtp","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","showConfPassword","setShowConfPassword","open","setOpen","closeBackdrop","useEffect","returnUrl","from","pathname","token","user","status","replace","className","style","width","height","error","onSubmit","e","preventDefault","resetPasswordAction","onClickBtnEvent","sx","color","zIndex","theme","drawer","onClick","marginBottom","fontSize","type","pattern","placeholder","name","required","disabled","value","maxLength","onChange","target","length","test","marginTop","display","alignItems","justifyContent","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}