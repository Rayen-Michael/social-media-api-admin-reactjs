{"version":3,"file":"static/js/147.4078f17b.chunk.js","mappings":"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","sources":["pages/users/Index.jsx","../node_modules/.pnpm/@mui+icons-material@5.10.9_qxyw2t6q3rtqm4qs6kuvqglmeu/node_modules/@mui/icons-material/Verified.js","../node_modules/.pnpm/@mui+icons-material@5.10.9_qxyw2t6q3rtqm4qs6kuvqglmeu/node_modules/@mui/icons-material/VerifiedUser.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, Typography, useTheme } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { tokens } from \"../../theme\";\nimport { useNavigate } from \"react-router-dom\";\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\nimport VerifiedIcon from '@mui/icons-material/Verified';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Header from \"../../components/Header\";\nimport {\n  getAllUsersAction,\n} from '../../redux/actions';\nimport PageHOC from \"../../helpers/PageHOC\";\nimport CircleAvatar from \"../../components/global/CircleAvatar\";\nimport { toDateString } from '../../utils/dateUtils';\n\nconst UserListPage = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n\n  const auth = useSelector((state) => state.auth);\n  const profileDetails = useSelector((state) => state.profileDetails);\n  const users = useSelector((state) => state.users);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [page, setPage] = useState(0);\n  const [open, setOpen] = useState(false);\n\n  const closeBackdrop = () => {\n    setOpen(false);\n  };\n\n  const openBackdrop = () => {\n    setOpen(true);\n  };\n\n  const getData = async () => {\n    const usersPromise = getAllUsersAction(dispatch, auth.token);\n    openBackdrop();\n    await usersPromise;\n    closeBackdrop();\n  }\n\n  const handlePageChange = async (newPage) => {\n    setPage(newPage);\n    const currentPage = newPage <= 0 ? 1 : newPage + 1;\n    const usersPromise = getAllUsersAction(dispatch, auth.token, currentPage);\n    if (users.status !== 'loading' && users.hasNextPage) {\n      await usersPromise;\n    }\n  };\n\n  const columns = [\n    {\n      field: \"avatar\",\n      headerName: \"\",\n      width: 64,\n      renderCell: (params) => (\n        <CircleAvatar\n          avatar={params.row.avatar}\n        />\n      ),\n    },\n    {\n      field: \"_id\",\n      headerName: \"ID\",\n      flex: 1.5,\n    },\n    {\n      field: \"fname\",\n      headerName: \"First name\",\n      flex: 1,\n    },\n    {\n      field: \"lname\",\n      headerName: \"Last Name\",\n      flex: 1,\n    },\n    {\n      field: \"email\",\n      headerName: \"Email\",\n      flex: 1,\n    },\n    {\n      field: \"uname\",\n      headerName: \"Username\",\n      flex: 1,\n    },\n    {\n      field: \"role\",\n      headerName: \"Access Level\",\n      flex: 1,\n      renderCell: ({ row: { role } }) => {\n        return (\n          <Box\n            m=\"0\"\n            p=\"2px 6px\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            backgroundColor={\n              role === \"admin\"\n                ? colors.redAccent[600]\n                : colors.greenAccent[600]\n            }\n            borderRadius=\"4px\"\n          >\n            <Typography fontSize=\"12px\"\n            >\n              {role}\n            </Typography>\n          </Box>\n        );\n      },\n    },\n    {\n      field: \"accountStatus\",\n      headerName: \"Account Status\",\n      flex: 1,\n      renderCell: ({ row: { accountStatus } }) => {\n        return (\n          <Box\n            m=\"0\"\n            p=\"2px 6px\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            backgroundColor={\n              accountStatus === \"active\"\n                ? colors.greenAccent[600]\n                : colors.redAccent[600]\n            }\n            borderRadius=\"4px\"\n          >\n            <Typography fontSize=\"12px\"\n            >\n              {accountStatus}\n            </Typography>\n          </Box>\n        );\n      },\n    },\n    {\n      field: \"isValid\",\n      headerName: \"Valid Status\",\n      flex: 1,\n      renderCell: ({ row: { isValid } }) => {\n        return (\n          <VerifiedUserIcon\n            sx={{\n              color: isValid ?\n                colors.greenAccent[600]\n                :\n                colors.redAccent[600],\n            }}\n          />\n        );\n      }\n    },\n    {\n      field: \"isVerified\",\n      headerName: \"Verified Status\",\n      flex: 1,\n      renderCell: ({ row: { isVerified } }) => {\n        return (\n          <VerifiedIcon\n            sx={{\n              color: isVerified ?\n                colors.greenAccent[600]\n                :\n                colors.grey[400],\n            }}\n          />\n        );\n      }\n    },\n    {\n      field: \"createdAt\",\n      headerName: \"Created At\",\n      flex: 1,\n      renderCell: ({ row: { createdAt } }) => {\n        return (\n          <Typography>\n            {createdAt ? toDateString(createdAt) : \"\"}\n          </Typography>\n        );\n      },\n    },\n    {\n      field: \"edit\",\n      headerName: \"\",\n      flex: 1,\n      renderCell: ({ row: { _id } }) => {\n        return (\n          <div\n            style={{\n              backgroundColor: colors.greenAccent[500],\n              padding: '5px 10px',\n              borderRadius: '4px',\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'center',\n              alignItems: 'center',\n              cursor: 'pointer'\n            }}\n            onClick={() => navigate(`/users/${_id}`)}\n          >\n            <VisibilityIcon />\n          </div>\n        );\n      }\n    }\n  ];\n\n  useEffect(() => {\n    document.title = \"Dashboard - All Users\";\n\n    if (\n      auth.status === 'authenticating' || profileDetails.status === 'loading' ||\n      users.status === 'loading'\n    ) {\n      openBackdrop();\n    }\n    else {\n      closeBackdrop();\n    }\n\n    return () => { }\n\n  }, [\n    auth.token, profileDetails.status, auth.status, users.status\n  ]);\n\n  useEffect(() => {\n    if (users.status === 'idle') {\n      getData();\n    }\n\n    return () => { }\n\n  }, [auth.token, users.status]);\n\n  return (\n    <Box m=\"20px\" mt=\"0\" width=\"100%\">\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={open}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n      <Header title=\"USERS\" subtitle=\"Managing the Users\" />\n      <Box\n        m=\"40px 0 0 0\"\n        height=\"75vh\"\n        sx={{\n          \"& .MuiDataGrid-root\": {\n            border: \"none\",\n          },\n          \"& .MuiDataGrid-cell\": {\n            borderBottom: \"none\",\n          },\n          \"& .name-column--cell\": {\n            color: colors.greenAccent[300],\n          },\n          \"& .MuiDataGrid-columnHeaders\": {\n            backgroundColor: colors.blueAccent[700],\n            borderBottom: \"none\",\n          },\n          \"& .MuiDataGrid-virtualScroller\": {\n            backgroundColor: colors.primary[400],\n          },\n          \"& .MuiDataGrid-footerContainer\": {\n            borderTop: \"none\",\n            backgroundColor: colors.blueAccent[700],\n          },\n          \"& .MuiCheckbox-root\": {\n            color: `${colors.greenAccent[200]} !important`,\n          },\n        }}\n      >\n        {\n          users.status === 'success' && (\n            <DataGrid\n              rows={users.results}\n              columns={columns}\n              rowCount={users.totalPages * users.limit}\n              pagination\n              paginationMode=\"server\"\n              pageSize={users.limit}\n              rowsPerPageOptions={[users.limit]}\n              page={page}\n              onPageChange={handlePageChange}\n              disableSelectionOnClick\n              getRowId={(row) => row._id}\n              loading={users.status === 'loading'}\n            />\n          )\n        }\n      </Box>\n    </Box>\n  );\n};\n\nexport default PageHOC(UserListPage);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m23 12-2.44-2.79.34-3.69-3.61-.82-1.89-3.2L12 2.96 8.6 1.5 6.71 4.69 3.1 5.5l.34 3.7L1 12l2.44 2.79-.34 3.7 3.61.82L8.6 22.5l3.4-1.47 3.4 1.46 1.89-3.19 3.61-.82-.34-3.69L23 12zm-12.91 4.72-3.8-3.81 1.48-1.48 2.32 2.33 5.85-5.87 1.48 1.48-7.33 7.35z\"\n}), 'Verified');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\"\n}), 'VerifiedUser');\n\nexports.default = _default;"],"names":["PageHOC","theme","useTheme","colors","tokens","palette","mode","auth","useSelector","state","profileDetails","users","dispatch","useDispatch","navigate","useNavigate","useState","page","setPage","open","setOpen","closeBackdrop","openBackdrop","getData","usersPromise","getAllUsersAction","token","handlePageChange","newPage","currentPage","status","hasNextPage","columns","field","headerName","width","renderCell","params","avatar","row","flex","role","m","p","display","justifyContent","alignItems","backgroundColor","redAccent","greenAccent","borderRadius","fontSize","accountStatus","isValid","sx","color","isVerified","grey","createdAt","toDateString","_id","style","padding","flexDirection","cursor","onClick","useEffect","document","title","mt","zIndex","drawer","subtitle","height","border","borderBottom","blueAccent","primary","borderTop","rows","results","rowCount","totalPages","limit","pagination","paginationMode","pageSize","rowsPerPageOptions","onPageChange","disableSelectionOnClick","getRowId","loading","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}