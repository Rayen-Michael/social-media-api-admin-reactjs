{"version":3,"file":"static/js/869.759d8a31.chunk.js","mappings":"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","sources":["components/global/Topbar.jsx","pages/auth/forgot-password/Index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Box, IconButton, useTheme } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ColorModeContext, tokens } from \"../../theme\";\nimport InputBase from \"@mui/material/InputBase\";\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { logoutAction } from '../../redux/actions';\n\nconst Topbar = () => {\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const colorMode = useContext(ColorModeContext);\n\n  const auth = useSelector((state) => state.auth);\n  // const profileDetails = useSelector((state) => state.profileDetails);\n  const dispatch = useDispatch();\n\n  const [scrolled, setScrolled] = useState(false);\n\n  const logoutUser = async () => {\n    const logoutPromise = logoutAction(dispatch);\n    await logoutPromise;\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", function () {\n      if (window.scrollY > 40) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n    });\n\n    return () => {\n      window.removeEventListener(\"scroll\", () => { });\n    }\n  }, []);\n\n  return (\n    <Box\n      position=\"fixed\"\n      top=\"0\"\n      left=\"0\"\n      right=\"0\"\n      height={{ xs: \"80px\", sm: \"80px\", md: \"80px\", lg: \"80px\" }}\n      bgcolor={colors.background}\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      p={2}\n      m=\"0\"\n      zIndex=\"100\"\n      boxShadow={\n        scrolled ?\n          \"10px 0 10px 20px rgba(0,0,0,0.1)\"\n          :\n          \"none\"\n      }\n    >\n\n      {/* LOGO */}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <img\n          alt=\"logo\"\n          width=\"auto\"\n          height='48px'\n          src={`../../logo.png`}\n        />\n      </Box>\n\n      {/* SEARCH BAR */}\n      {\n        auth.status === 'authenticated' ?\n          <Box\n            display=\"flex\"\n            backgroundColor={colors.primary[400]}\n            borderRadius=\"4px\"\n            height={{ xs: \"40px\", sm: \"40px\", md: \"40px\", lg: \"40px\" }}\n          >\n            <InputBase sx={{ ml: 2, flex: 1 }} placeholder=\"Search\" />\n            <IconButton type=\"button\" sx={{ p: 1 }}>\n              <SearchIcon />\n            </IconButton>\n          </Box>\n          :\n          null\n      }\n\n      {/* ICONS */}\n      <Box display=\"flex\">\n        <IconButton onClick={colorMode.toggleColorMode}>\n          {theme.palette.mode === \"dark\" ? (\n            <DarkModeOutlinedIcon />\n          ) : (\n            <LightModeOutlinedIcon />\n          )}\n        </IconButton>\n\n        {\n          auth.status === 'authenticated' ?\n            <IconButton>\n              <NotificationsOutlinedIcon />\n            </IconButton>\n            :\n            null\n        }\n\n        {\n          auth.status === 'authenticated' ?\n            <IconButton>\n              <SettingsOutlinedIcon />\n            </IconButton>\n            :\n            null\n        }\n\n        {\n          auth.status === 'authenticated' ?\n            <IconButton onClick={logoutUser}>\n              <PersonOutlinedIcon />\n            </IconButton>\n            :\n            null\n        }\n      </Box>\n    </Box>\n  );\n};\n\nexport default Topbar;\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useLocation, NavLink } from \"react-router-dom\";\r\nimport { Box, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../../../theme\";\r\nimport { useSnackbar } from 'notistack';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { forgotPasswordAction } from '../../../redux/actions';\r\nimport Topbar from \"../../../components/global/Topbar\";\r\n\r\nconst ForgotPasswordPage = () => {\r\n    const theme = useTheme();\r\n    const colors = tokens(theme.palette.mode);\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const closeBackdrop = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const openBackdrop = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const onClickBtnEvent = (e) => async (dispatch) => {\r\n        e.preventDefault();\r\n\r\n        openBackdrop();\r\n\r\n        await forgotPasswordAction(dispatch, email);\r\n\r\n        closeBackdrop();\r\n\r\n        if (auth.status === 'emailSent') {\r\n            navigate('/auth/reset-password', { replace: true });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Forgot Password | Dashboard\";\r\n\r\n        const returnUrl = location.state?.from?.pathname || '/';\r\n\r\n        if (auth.token && auth.status === 'authenticated') {\r\n            navigate(returnUrl, { replace: true });\r\n        }\r\n\r\n        if (auth.status === 'error') {\r\n            enqueueSnackbar(auth.error, { variant: 'error' });\r\n        }\r\n\r\n        return () => { }\r\n\r\n    }, [\r\n        auth.token, navigate, auth.status,\r\n        location.state?.from?.pathname,\r\n        enqueueSnackbar, auth.error\r\n    ]);\r\n\r\n    return (\r\n        <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n            height=\"100vh\"\r\n            position=\"relative\"\r\n            bgcolor={colors.background}\r\n        >\r\n            <Topbar />\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                open={open}\r\n            >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                width=\"100%\"\r\n                maxWidth={{\r\n                    xs: \"100%\",\r\n                    sm: \"600px\",\r\n                    md: \"600px\",\r\n                    lg: \"600px\",\r\n                    xl: \"600px\",\r\n                }}\r\n                bgcolor={{\r\n                    xs: 'transparent',\r\n                    sm: colors.primary[400],\r\n                    md: colors.primary[400],\r\n                    lg: colors.primary[400]\r\n                }}\r\n                padding={{\r\n                    xs: '16px',\r\n                    sm: '16px 24px',\r\n                    md: '16px 24px',\r\n                    lg: \"16px 24px\",\r\n                }}\r\n                overflow=\"hidden\"\r\n                transition=\"all 0.3s ease\"\r\n            >\r\n\r\n                <form onSubmit={(e) => dispatch(onClickBtnEvent(e))}\r\n                    style={{\r\n                        width: '100%',\r\n                        maxWidth: '600px'\r\n                    }}\r\n                >\r\n\r\n                    <p\r\n                        style={{\r\n                            fontSize: \"2rem\",\r\n                            fontWeight: 700,\r\n                            textTransform: \"capitalize\",\r\n                            marginBottom: \"2rem\",\r\n                        }}\r\n                    >\r\n                        Forgot your password?\r\n                    </p>\r\n\r\n                    <p style={{\r\n                        marginBottom: \"0.5rem\",\r\n                        fontSize: \"0.95rem\",\r\n                    }}>\r\n                        Enter your email address and we'll send you an OTP\r\n                        to reset your password.\r\n                    </p>\r\n\r\n                    <div className=\"app__form_control\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            required\r\n                            disabled={auth.status === 'sendingEmail'}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{\r\n                        width: '100%',\r\n                        marginTop: '1rem',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start'\r\n                    }}>\r\n                        <NavLink to=\"/auth/login\">\r\n                            <div className=\"app__text_btn\">Login to account</div>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div style={{\r\n                        width: '100%',\r\n                        marginTop: '2rem',\r\n                    }}>\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"send otp\"\r\n                            disabled={auth.status === 'sendingEmail'}\r\n                            className=\"app__filled_btn app__form_control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"app__form_control\">\r\n                        <span>\r\n                            Already have an OTP?\r\n                        </span>\r\n                        <NavLink to=\"/auth/reset-password\">\r\n                            <div className=\"app__text_btn\">Reset Password</div>\r\n                        </NavLink>\r\n                    </div>\r\n                </form>\r\n\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordPage;"],"names":["theme","useTheme","colors","tokens","palette","mode","colorMode","useContext","ColorModeContext","auth","useSelector","state","dispatch","useDispatch","useState","scrolled","setScrolled","logoutUser","logoutPromise","logoutAction","useEffect","window","addEventListener","scrollY","removeEventListener","position","top","left","right","height","xs","sm","md","lg","bgcolor","background","display","flexDirection","justifyContent","alignItems","p","m","zIndex","boxShadow","alt","width","src","status","backgroundColor","primary","borderRadius","sx","ml","flex","placeholder","type","onClick","toggleColorMode","navigate","useNavigate","location","useLocation","email","setEmail","open","setOpen","enqueueSnackbar","useSnackbar","document","title","returnUrl","from","pathname","token","replace","error","variant","color","drawer","maxWidth","xl","padding","overflow","transition","onSubmit","e","preventDefault","forgotPasswordAction","onClickBtnEvent","style","fontSize","fontWeight","textTransform","marginBottom","className","name","required","disabled","value","onChange","target","marginTop","to"],"sourceRoot":""}